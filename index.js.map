{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/j-push/index.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,oBAAoB;OAC7C,EAAE,UAAU,EAAE,MAAM,eAAe;AAE1C;;GAEG;AASH;IAAA;IA+HA,CAAC;IA7HC;;;;;;;OAOG;IAEH,oBAAI,GAAJ;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;OAGG;IAEH,wBAAQ,GAAR;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;OAGG;IAEH,0BAAU,GAAV;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;;;;OAMG;IAEH,6BAAa,GAAb;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;;;OAKG;IAEH,iCAAiB,GAAjB;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;;;OAKG;IAEH,gCAAgB,GAAhB,UAAiB,IAAW,EAAE,KAAa;QACzC,MAAM,CAAC;IACT,CAAC;IACD;;;;OAIG;IAEH,uBAAO,GAAP,UAAQ,IAAW;QACjB,MAAM,CAAC;IACT,CAAC;IACD;;;;OAIG;IAEH,wBAAQ,GAAR,UAAS,KAAa;QACpB,MAAM,CAAC;IACT,CAAC;IACD;;;OAGG;IAEH,2CAA2B,GAA3B;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;;OAIG;IAEH,gCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,QAAQ;YAC1B,gBAAgB,CAAC,wBAAwB,EAAE,UAAU,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACL,CAAC;IACD;;;;OAIG;IAEH,mCAAmB,GAAnB;QACE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,QAAQ;YAC1B,gBAAgB,CAAC,2BAA2B,EAAE,UAAU,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;IACL,CAAC;;IACD;;;;OAIG;IAEH,8BAAc,GAAd;QACE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,QAAQ;YAC1B,gBAAgB,CAAC,sBAAsB,EAAE,UAAU,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACL,CAAC;;IAEI,gBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,oBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IApHA;QAAC,OAAO,EAAE;;;;qCAAA;IAQV;QAAC,OAAO,EAAE;;;;yCAAA;IAQV;QAAC,OAAO,EAAE;;;;2CAAA;IAWV;QAAC,OAAO,EAAE;;;;8CAAA;IAUV;QAAC,OAAO,EAAE;;;;kDAAA;IAUV;QAAC,OAAO,EAAE;;;;iDAAA;IASV;QAAC,OAAO,EAAE;;;;wCAAA;IASV;QAAC,OAAO,EAAE;;;;yCAAA;IAQV;QAAC,OAAO,EAAE;;;;4DAAA;IASV;QAAC,OAAO,EAAE;;;;iDAAA;IAWV;QAAC,OAAO,EAAE;;;;oDAAA;IAWV;QAAC,OAAO,EAAE;;;;+CAAA;IA1HZ;QAAC,MAAM,CAAC;YACN,UAAU,EAAE,OAAO;YACnB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,qBAAqB;YAChC,IAAI,EAAE,gDAAgD;YACtD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;;aAAA;IAiIF,YAAC;AAAD,CAAC,AA/HD,IA+HC","sourcesContent":["import { Plugin, Cordova } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @name JPush 极光推送\n */\n@Plugin({\n  pluginName: 'JPush',\n  plugin: 'jpush-phonegap-plugin', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'plugins.jPushPlugin', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://github.com/jpush/jpush-phonegap-plugin', // the github repository URL for the plugin\n  platforms: ['Android', 'iOS'], // Array of platforms supported, example: ['Android', 'iOS']\n})\n\nexport class JPush {\n\n  /**\n   * 开启 JPush SDK 提供的推送服务\n   * 开发者 App 可以通过调用停止推送服务 API 来停止极光推送服务。当又需要使用极光推送服务时，则必须要调用恢复推送服务 API。\n   * 本功能是一个完全本地的状态操作，也就是说：停止推送服务的状态不会保存到服务器上。\n   * 如果停止推送服务后，开发者 App 被重新安装，或者被清除数据，JPush SDK 会恢复正常的默认行为（因为保存在本地的状态数据被清除掉了）。\n   * 本功能其行为类似于网络中断的效果，即：推送服务停止期间推送的消息，恢复推送服务后，如果推送的消息还在保留的时长范围内，则客户端是会收到离线消息。\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  init(): Promise<any> {\n    return;\n  }\n  /**\n   * 停止推送服务\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  stopPush(): Promise<any> {\n    return;\n  }\n  /**\n   * 恢复推送服务\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  resumePush(): Promise<any> {\n    return;\n  }\n  /**\n   * Android 平台:\n   * 用来检查 Push Service 是否已经被停止。\n   * iOS 平台:\n   * 平台检查推送服务是否注册。\n   * @return {Promise<any>} 回调函数，用来通知 JPush 的推送服务是否开启。\n   */\n  @Cordova()\n  isPushStopped(): Promise<any> {\n    return;\n  }\n  /**\n   * 获取 RegistrationID\n   * RegistrationID 定义:\n   * 集成了 JPush SDK 的应用程序在第一次成功注册到 JPush 服务器时，JPush 服务器会给客户端返回一个唯一的该设备的标识 - RegistrationID。 JPush SDK 会以广播的形式发送 RegistrationID 到应用程序。应用程序可以把此 RegistrationID 保存以自己的应用服务器上，然后就可以根据 RegistrationID 来向设备推送消息或者通知。\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  getRegistrationID(): Promise<any> {\n    return;\n  }\n  /**\n   * 设置别名与标签\n   * @param tags 标签 参数类型为数组\n   * @param alias 别名 参数类型为字符串。\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  setTagsWithAlias(tags: any[], alias: string): Promise<any> {\n    return;\n  }\n  /**\n   * 设置标签\n   * @param tags 标签 参数类型为数组\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  setTags(tags: any[], ): Promise<any> {\n    return;\n  }\n  /**\n   * 设置别名\n   * @param alias 别名 参数类型为字符串。\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  setAlias(alias: string): Promise<any> {\n    return;\n  }\n  /**\n   * 判断系统设置中是否允许当前应用推送\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  getUserNotificationSettings(): Promise<any> {\n    return;\n  }\n  /**\n   * 获取点击通知内容\n   * https://github.com/jpush/jpush-phonegap-plugin/blob/master/doc/Common_detail_api.md#event---jpushopennotification\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  openNotification(): Promise<any> {\n    return new Promise((observer) => {\n      addEventListener('jpush.openNotification', function (event) { return event; }, false);\n    });\n  }\n  /**\n   * 获取通知内容\n   * https://github.com/jpush/jpush-phonegap-plugin/blob/master/doc/Common_detail_api.md#event---jpushreceivenotification\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  receiveNotification(): Promise<any> {\n    return new Promise((observer) => {\n      addEventListener('jpush.receiveNotification', function (event) { return event; }, false);\n    });\n  };\n  /**\n   * 获取自定义消息推送内容\n   * https://github.com/jpush/jpush-phonegap-plugin/blob/master/doc/Common_detail_api.md#event---jpushreceivemessage\n   * @return {Promise<any>} \n   */\n  @Cordova()\n  receiveMessage(): Promise<any> {\n    return new Promise((observer) => {\n      addEventListener('jpush.receiveMessage', function (event) { return event; }, false);\n    });\n  };\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}