{"version":3,"sources":["../../../src/@ionic-native/plugins/j-push/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C;;;GAGG;AASH,IAAa,KAAK;IAAS,yBAAiB;IAA5C;;IAgLA,CAAC;IA9KC;;;;;;;OAOG;IAEH,oBAAI,GAAJ;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;OAGG;IAEH,wBAAQ,GAAR;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;OAGG;IAEH,0BAAU,GAAV;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;;;;OAMG;IAEH,6BAAa,GAAb;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;;;OAKG;IAEH,iCAAiB,GAAjB;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;;;OAKG;IAEH,gCAAgB,GAAhB,UAAiB,IAAW,EAAE,KAAa;QACzC,MAAM,CAAC;IACT,CAAC;IACD;;;;OAIG;IAEH,uBAAO,GAAP,UAAQ,IAAW;QACjB,MAAM,CAAC;IACT,CAAC;IACD;;;;OAIG;IAEH,wBAAQ,GAAR,UAAS,KAAa;QACpB,MAAM,CAAC;IACT,CAAC;IAED;;;MAGE;IAIF,gDAAgC,GAAhC;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;OAGG;IAEH,2CAA2B,GAA3B;QACE,MAAM,CAAC;IACT,CAAC;IACD,MAAM;IACN,cAAc;IACd,uHAAuH;IACvH,6BAA6B;IAC7B,MAAM;IACN,aAAa;IACb,+BAA+B;IAC/B,sCAAsC;IACtC,kGAAkG;IAClG,QAAQ;IACR,IAAI;IACJ,MAAM;IACN,YAAY;IACZ,0HAA0H;IAC1H,6BAA6B;IAC7B,MAAM;IACN,aAAa;IACb,wCAAwC;IACxC,sCAAsC;IACtC,qGAAqG;IACrG,QAAQ;IACR,KAAK;IACL;;;;OAIG;IAEH,8BAAc,GAAd;QACE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;YACzB,QAAQ,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,UAAC,KAAK,IAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;IACF;;;MAGE;IAEF,4BAAY,GAAZ,UAAa,IAAa,IAAI,CAAC;IAC/B;;;;OAIG;IAIH,wBAAQ,GAAR,UAAS,KAAa;QACpB,MAAM,CAAC;IACT,CAAC;IACD;;;OAGG;IAIH,0BAAU,GAAV;QACE,MAAM,CAAC;IACT,CAAC;IACD;;;;OAIG;IAIH,6CAA6B,GAA7B,UAA8B,KAAa;QACzC,MAAM,CAAC;IACT,CAAC;IAQH,YAAC;AAAD,CAhLA,AAgLC,CAhL0B,iBAAiB,GAgL3C;AANM,gBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,oBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AApKA;IADC,OAAO,EAAE;;;;iCAGT;AAMD;IADC,OAAO,EAAE;;;;qCAGT;AAMD;IADC,OAAO,EAAE;;;;uCAGT;AASD;IADC,OAAO,EAAE;;;;0CAGT;AAQD;IADC,OAAO,EAAE;;;;8CAGT;AAQD;IADC,OAAO,EAAE;;;;6CAGT;AAOD;IADC,OAAO,EAAE;;;;oCAGT;AAOD;IADC,OAAO,EAAE;;;;qCAGT;AASD;IAHC,OAAO,CAAC;QACP,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;;;;6DAGD;AAMD;IADC,OAAO,EAAE;;;;wDAGT;AA6BD;IADC,OAAO,EAAE;;;;2CAKT;AAMD;IADC,OAAO,EAAE;;;;yCACqB;AAS/B;IAHC,OAAO,CAAC;QACP,SAAS,EAAE,CAAC,KAAK,CAAC;KACnB,CAAC;;;;qCAGD;AAQD;IAHC,OAAO,CAAC;QACP,SAAS,EAAE,CAAC,KAAK,CAAC;KACnB,CAAC;;;;uCAGD;AASD;IAHC,OAAO,CAAC;QACP,SAAS,EAAE,CAAC,KAAK,CAAC;KACnB,CAAC;;;;0DAGD;AAxKU,KAAK;IARjB,MAAM,CAAC;QACN,UAAU,EAAE,OAAO;QACnB,MAAM,EAAE,uBAAuB;QAC/B,SAAS,EAAE,qBAAqB;QAChC,IAAI,EAAE,gDAAgD;QACtD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,KAAK,CAgLjB;SAhLY,KAAK","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * @name JPush\r\n * @description \r\n */\r\n@Plugin({\r\n  pluginName: 'JPush',\r\n  plugin: 'jpush-phonegap-plugin', // npm package name, example: cordova-plugin-camera\r\n  pluginRef: 'plugins.jPushPlugin', // the variable reference to call the plugin, example: navigator.geolocation\r\n  repo: 'https://github.com/jpush/jpush-phonegap-plugin', // the github repository URL for the plugin\r\n  platforms: ['Android', 'iOS'], // Array of platforms supported, example: ['Android', 'iOS']\r\n})\r\n\r\nexport class JPush extends IonicNativePlugin {\r\n\r\n  /**\r\n   * 开启 JPush SDK 提供的推送服务\r\n   * 开发者 App 可以通过调用停止推送服务 API 来停止极光推送服务。当又需要使用极光推送服务时，则必须要调用恢复推送服务 API。\r\n   * 本功能是一个完全本地的状态操作，也就是说：停止推送服务的状态不会保存到服务器上。\r\n   * 如果停止推送服务后，开发者 App 被重新安装，或者被清除数据，JPush SDK 会恢复正常的默认行为（因为保存在本地的状态数据被清除掉了）。\r\n   * 本功能其行为类似于网络中断的效果，即：推送服务停止期间推送的消息，恢复推送服务后，如果推送的消息还在保留的时长范围内，则客户端是会收到离线消息。\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  init(): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 停止推送服务\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  stopPush(): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 恢复推送服务\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  resumePush(): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * Android 平台:\r\n   * 用来检查 Push Service 是否已经被停止。\r\n   * iOS 平台:\r\n   * 平台检查推送服务是否注册。\r\n   * @return {Promise<any>} 回调函数，用来通知 JPush 的推送服务是否开启。\r\n   */\r\n  @Cordova()\r\n  isPushStopped(): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 获取 RegistrationID\r\n   * RegistrationID 定义:\r\n   * 集成了 JPush SDK 的应用程序在第一次成功注册到 JPush 服务器时，JPush 服务器会给客户端返回一个唯一的该设备的标识 - RegistrationID。 JPush SDK 会以广播的形式发送 RegistrationID 到应用程序。应用程序可以把此 RegistrationID 保存以自己的应用服务器上，然后就可以根据 RegistrationID 来向设备推送消息或者通知。\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  getRegistrationID(): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 设置别名与标签\r\n   * @param tags 标签 参数类型为数组\r\n   * @param alias 别名 参数类型为字符串。\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  setTagsWithAlias(tags: any[], alias: string): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 设置标签\r\n   * @param tags 标签 参数类型为数组\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  setTags(tags: any[], ): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 设置别名\r\n   * @param alias 别名 参数类型为字符串。\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  setAlias(alias: string): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n  * 自定义设置\r\n  * @return {Promise<any>} \r\n  */\r\n  @Cordova({\r\n    platforms: ['Android']\r\n  })\r\n  setCustomPushNotificationBuilder(): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 判断系统设置中是否允许当前应用推送\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  getUserNotificationSettings(): Promise<any> {\r\n    return;\r\n  }\r\n  // /**\r\n  //  * 获取点击通知内容\r\n  //  * https://github.com/jpush/jpush-phonegap-plugin/blob/master/doc/Common_detail_api.md#event---jpushopennotification\r\n  //  * @return {Promise<any>} \r\n  //  */\r\n  // @Cordova()\r\n  // openNotice(): Promise<any> {\r\n  //   return new Promise((resolve) => {\r\n  //     document.addEventListener('jpush.openNotification', (event) => { resolve(event); }, false);\r\n  //   });\r\n  // }\r\n  // /**\r\n  //  * 获取通知内容\r\n  //  * https://github.com/jpush/jpush-phonegap-plugin/blob/master/doc/Common_detail_api.md#event---jpushreceivenotification\r\n  //  * @return {Promise<any>} \r\n  //  */\r\n  // @Cordova()\r\n  // receiveNotification(): Promise<any> {\r\n  //   return new Promise((resolve) => {\r\n  //     document.addEventListener('jpush.receiveNotification', (event) => { resolve(event); }, false);\r\n  //   });\r\n  // };\r\n  /**\r\n   * 获取自定义消息推送内容\r\n   * https://github.com/jpush/jpush-phonegap-plugin/blob/master/doc/Common_detail_api.md#event---jpushreceivemessage\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova()\r\n  receiveMessage(): Promise<any> {\r\n    return new Promise((resolve) => {\r\n      document.addEventListener('jpush.receiveMessage', (event) => { resolve(event); }, false);\r\n    });\r\n  };\r\n  /**\r\n  * 调试模式\r\n  * @param mode 是否启用 \r\n  */\r\n  @Cordova()\r\n  setDebugMode(mode: boolean) { }\r\n  /**\r\n   * 设置badge\r\n   * @param value 数量\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS']\r\n  })\r\n  setBadge(value: number): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 重置badge\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS']\r\n  })\r\n  reSetBadge(): Promise<any> {\r\n    return;\r\n  }\r\n  /**\r\n   * 本接口直接改变应用本地的角标值，设置 iOS 的角标，当设置 value ＝ 0 时为清除角标\r\n   * @param value 数量\r\n   * @return {Promise<any>} \r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS']\r\n  })\r\n  setApplicationIconBadgeNumber(value: number): Promise<any> {\r\n    return;\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}